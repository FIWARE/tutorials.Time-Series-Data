#!/bin/bash
#
#  curl commands to reload the data from the previous tutorial
#
#

set -e

echo -e "⏳ Loading context data in \033[1mNGSI-LD\033[0m format"
echo -e "    - all entity data models are defined referencing the" 
echo -e "      \033[1m"${TUTORIAL_DATA_MODELS_CONTEXT}"\033[0m JSON-LD context"
echo -e "\nCreating ${COW_COUNT:-4} cows and ${COW_COUNT:-4} pigs"

generate_post_data()
{
  cat <<EOF
  $animals
EOF
}

function addCondition()
{
  animals="$animals \"sex\": { \"type\": \"Property\", \"value\": \"$1\"},"
  if [ "$1" == "male" ]; then
    animals="$animals \"phenologicalCondition\": { \"type\": \"Property\", \"value\": \"maleAdult\"},";
    animals="$animals \"reproductiveCondition\": { \"type\": \"Property\", \"value\": \"active\"},";
  else
    animals="$animals \"phenologicalCondition\": { \"type\": \"Property\", \"value\": \"femaleAdult\"},";

    if [ $((count%11)) -eq 0 ]; then
       animals="$animals \"reproductiveCondition\": { \"type\": \"Property\", \"value\": \"inactive\"},";
    elif [ $((count%7)) -eq 0 ]; then
       animals="$animals \"reproductiveCondition\": { \"type\": \"Property\", \"value\": \"inHeat\"},";
    elif [ $((count%5)) -eq 0 ]; then
       animals="$animals \"reproductiveCondition\": { \"type\": \"Property\", \"value\": \"inCalf\"},";
    else 
      animals="$animals \"reproductiveCondition\": { \"type\": \"Property\", \"value\": \"active\"},";
    fi
  fi
}

count=0;
for cowNames in Beany Trotter Petal River Sun Twilight Diamond Pollen Juicey Tulip Oats Rain Silver Stamps Button Lacey Fisher Rice Eenie Chalky Joy Feather Happy Fluffy Bug Opal Fresian Star Bumble Blossom Buttercup Clover Flower Grape Citrus Hero Cloud Jersey Cream Marble Sugar Pepsi Spots Milky Blue Dales Gorgeous Pitta Harvest Arnie Ermantrude Clarabelle Annabelle Elsie Elmer Ferdinand Laughing Cow Milky White Otis Toro  Kai Heffer Wolfe Benny Betsy Taurus Bulba Clemantine Clovis Zippy Harley Oakley Bead Bree Astro Galaxy Drone Fig Reef Palm Ursula Wazowski Dumpling Imp Tinker Titch Clifford Wade Hulk Moose Sherman Nemo Zorro Vache Mucca Speedy Zoomer Cleopatra Diablo Hiccup Viper Smithy Lolly Popsicle Summer Trident Horniman Moses Flynn Cinders Mouse Ego Slapper Flipper Denim Boyce Loops Racer Axe Blade Spice Fury Tyson Diesel Axel Chopper Viking Mystery Buzz Stark Brute Sabre Reaper Rebel Psycho Tank Gunner Bolt Bullet Shot Titan Sumo Kong Bruiser Ursula Drone Cracker Arrow Warrior Major Razor Spud Trip Slicer Charcoal Grill Gangster Boss Brute Don Danger Pepper Ton Python Poison Ace Woody Blade Hero Oreo Checkers Chess Dalmatian Soccer Puzzle Dice Orca Piano Penguin Panda Skunk Vintage Domino Yin Yang Badger Butler Patches Snoopy Pongo Perdita Freckles Tuxedo Cruella Keys Harlequin Banksy Coca-Cola Dot Lemur Sushi Shadow Silhouette Doodle Retro Polka Paisley Blackberry Pepper Zebra Magpie Newt Swan Pebble Storm Chocolate Coco Hershey Dairymilk Oak Wicker Bear Teddy Pine Conker Mushroom Coffee Toffee Fudge Mocha Peanut Gingerbread Walnut Cookie Acorn Cello Camel Fawn Chestnut Pheasant Muddy Toast Tea Biscuit Monkey Coconut Beaver Tawny Espresso Umber Brunette Cinnamon Cedar Penny Goomba Malteaser Brownie Pretzel Brunette Tanner Auburn Copper Bronze Liver Hazel
do
    eval cowName$count="$cowNames";
    count=$((count + 1));
done
count=0;
for pigNames in Bubblegum Fuchshia Flamingo Salmon Rouge Peach Coral Magenta Cherry Carnation Strawberry Blush Mauve Orchid Cotton Tango Lavender Grape Raspberry Wine Watermelon Taffy Lemonade Lips Flower Bud Sprinkles Jellybean Sherbert Tutu Mammoth Goliath Hulk Thor Giant Bruce Colossus Clifford Terminator Reptar BFG Balrog Smaug King Kong Hagrid Thanos Godzilla Beast Drogon Kraken Ogre Dino Bear Hercules Maximus Attila Moose Caesar Sampson Ragnarok Minnie Micra Nano Atom Ion Tinker Chico Bambi Scamp Cub Bean Skittles Tic Tac Pickle Pippin Twiglet Bitsy Gnat Neutron Smudge Pip Bonbon Shrimp Ladybug Midge Raisin Shorty Teeny Beans Squash Ebony Midnight Ink Raven Crow Charcoal Olive Onyx Noir Sable Obsidian Sooty Pitch Tar Petrol Diesel Fuel Spider Jade Jet Lead Iron Shadow Ash Anchor Pewter Slate Smoke Flint Fossil Scratching Melon Oinks Mud Bubbles Opal Jewel Addison Pebbles Star Kiss Wrinkle Bacon Cuddles Snorter Belle Vax Rose Chorizo Vanity Blue Lolly Icicle Crafty Snout Dart Jig Pancetta Wish Percy
do
    eval pigName$count="$pigNames";
    count=$((count + 1));
done
count=0;

animals="[";
for number in 001 002 003 004 005 006 007 008 009 010 011 012 013 014 015 016 017 018 019 020 021 022 023 024 025 026 027 028 029 030 031 032 033 034 035 036 037 038 039 040 041 042 043 044 045 046 047 048 049 050 051 052 053 054 055 056 057 058 059 060 061 062 063 064 065 066 067 068 069 070 071 072 073 074 075 076 077 078 079 080 081 082 083 084 085 086 087 088 089 090 091 092 093 094 095 096 097 098 099 100
do

  if [ $count -lt ${COW_COUNT:-4} ]; then
      eval cowName="\$cowName$count";
      animals="$animals {\"id\":\"urn:ngsi-ld:Animal:cow$number\", \"type\": \"Animal\",";
      animals="$animals \"species\": { \"type\": \"Property\", \"value\": \"dairy cattle\"},";
      animals="$animals \"name\": { \"type\": \"Property\", \"value\": \"$cowName\"},";
      if [ $((count%20)) -eq 0 ]; then
       addCondition "male" "bull";
       animals="$animals \"legalID\": { \"type\": \"Property\", \"value\": \"M-bull$number-$cowName\" }"
      else 
       addCondition "female" "cow";
       animals="$animals \"legalID\": { \"type\": \"Property\", \"value\": \"F-cow$number-$cowName\" }"
      fi
      animals="$animals },"
    fi

    if [ $count -lt ${PIG_COUNT:-4} ]; then
      eval pigName="\$pigName$count";
      animals="$animals {\"id\":\"urn:ngsi-ld:Animal:pig$number\", \"type\": \"Animal\",";
      animals="$animals \"species\": { \"type\": \"Property\", \"value\": \"pig\"},";
      animals="$animals \"name\": { \"type\": \"Property\", \"value\": \"$pigName\"},";
     
      if [ $((count%2)) -eq 0 ]; then
       addCondition "male" "boar";
       animals="$animals \"legalID\": { \"type\": \"Property\", \"value\": \"M-boar$number-$pigName\" }"
      else 
       addCondition "female" "sow";
       animals="$animals \"legalID\": { \"type\": \"Property\", \"value\": \"M-sow$number-$pigName\" }"
      fi
      animals="$animals },"
    fi

  count=$((count + 1));
done

animals="${animals::-1} ]"

#echo $animals;
#exit 0;


curl -s -o /dev/null -X POST 'http://'"${CONTEXT_BROKER}"'/ngsi-ld/v1/entityOperations/upsert?options=update' \
-H 'NGSILD-Tenant: openiot' \
-H 'Content-Type: application/json' \
-H 'Link: <'"${TUTORIAL_DATA_MODELS_CONTEXT}"'>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"' \
-H 'Accept: application/ld+json' \
-d "$(generate_post_data)"


echo -e "Creating farm workers and buildings"
#
# Create four Farm Entities in various locations across Berlin
#
curl -s -o /dev/null -X POST 'http://'"${CONTEXT_BROKER}"'/ngsi-ld/v1/entityOperations/upsert' \
-H 'Content-Type: application/json' \
-H 'Link: <'"${TUTORIAL_DATA_MODELS_CONTEXT}"'>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"' \
-H 'Accept: application/ld+json' \
--data-raw '[
  {
    "id": "urn:ngsi-ld:Building:farm001",
    "type": "Building",
    "category": {"type": "Property", "value": ["farm"]},
    "address": {
        "type": "Property",
        "value": { "streetAddress": "Großer Stern 1", "addressRegion": "Berlin", "addressLocality": "Tiergarten", "postalCode": "10557"},
        "verified": { "type": "Property", "value": true}
    },
    "location": {
        "type": "GeoProperty",
        "value": { "type": "Point", "coordinates": [13.3505, 52.5144]}
    },
    "name": {"type": "Property","value": "Victory Farm"},
    "owner": {"type": "Relationship", "object": "urn:ngsi-ld:Person:person001"}
  },
  {
    "id": "urn:ngsi-ld:Building:barn002",
    "type": "Building",
    "category": {"type": "Property", "value": ["barn"]},
    "address": {
        "type": "Property",
        "value": { "streetAddress": "Straße des 17. Juni", "addressRegion": "Berlin", "addressLocality": "Tiergarten", "postalCode": "10557"},
        "verified": { "type": "Property", "value": true}
    },
    "location": {
        "type": "GeoProperty",
        "value": { "type": "Point", "coordinates": [13.3698, 52.5163]}
    },
    "name": {"type": "Property","value": "Big Red Barn"},
    "owner": {"type": "Relationship", "object": "urn:ngsi-ld:Person:person001"}
  },
  {
    "id": "urn:ngsi-ld:Building:tower003",
    "type": "Building",
    "category": {"type": "Property", "value": ["water_tower"]},
    "address": {
        "type": "Property",
        "value": { "streetAddress": "John-Foster-Dulles-Allee", "addressRegion": "Berlin", "addressLocality": "Tiergarten", "postalCode": "10557"},
        "verified": { "type": "Property", "value": true}
    },
    "location": {
        "type": "GeoProperty",
        "value": { "type": "Point", "coordinates": [13.3598, 52.5165]}
    },
    "name": {"type": "Property","value": "Triton Tower"},
    "owner": {"type": "Relationship", "object": "urn:ngsi-ld:Person:person001"}
  },
  {
    "id": "urn:ngsi-ld:Building:farm002",
    "type": "Building",
    "category": {"type": "Property", "value": ["farm"]},
    "address": {
        "type": "Property",
        "value": { "streetAddress": "Hardenbergplatz 8", "addressRegion": "Berlin", "addressLocality": "Tiergarten", "postalCode": "10787"},
        "verified": { "type": "Property", "value": true}
    },
    "location": {
        "type": "GeoProperty",
        "value": { "type": "Point", "coordinates": [13.3127, 52.4893]}
    },
    "name": {"type": "Property","value": "Animal Farm"},
    "owner": {"type": "Relationship", "object": "urn:ngsi-ld:Person:person002"}
  },
  {
    "id": "urn:ngsi-ld:Person:person001",
    "type": "Person",
    "name": {"type": "Property","value": "Old MacDonald"}
  },
  {
    "id": "urn:ngsi-ld:Person:person002",
    "type": "Person",
    "name": {"type": "Property","value": "Napoleon"}
  }
]'

echo -e " \033[1;32mdone\033[0m"
